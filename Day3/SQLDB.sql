		CREATE TABLE PRODUCTS(
		PRODUCT_ID INT PRIMARY KEY AUTO_INCREMENT,
		PRODUCT_NAME VARCHAR(100) NOT NULL,
		PRICE FLOAT NOT NULL,
		QUANTITY INT NOT NULL,
		CREATED_AT TIMESTAMP DEFAULT NOW(),
		UPDATED_AT TIMESTAMP DEFAULT NOW() ON UPDATE NOW()
	   );
       
       INSERT INTO PRODUCTS(PRODUCT_ID , PRODUCT_NAME , PRICE , QUANTITY )
       VALUES(1 , 'MOBILE' ,  100000 , 100 ) , 
       (2 , 'PEN' , 100, 100),
       (3, 'NOTEBOOK' , 200 , 100),
       (4, 'IPAD' , 30000 , 100),
       (5,'BOOK' , 500 , 100),
       (6,'MUG' , 300 , 100);


		CREATE TABLE USERS(
		ID INT PRIMARY KEY AUTO_INCREMENT,
		FIRST_NAME VARCHAR(20) NOT NULL,
		LAST_NAME VARCHAR(20) NOT NULL,
		EMAIL VARCHAR(50) NOT NULL UNIQUE,
		PHONE VARCHAR(10) NOT NULL,
		CREATED_AT TIMESTAMP DEFAULT NOW(),
		UPDATED_AT TIMESTAMP DEFAULT NOW() ON UPDATE NOW()
		);
        
	INSERT INTO USERS (FIRST_NAME , LAST_NAME ,EMAIL , PHONE) 
    VALUES('JUNAID' ,'ISMILE' , 'JDS@GMAIL.COM' , '77778822') , 
    ('NIKHIL' ,'PAL' , 'XCDSS@GMAIL.COM' , '12334322'),
    ('DEEP' ,'MAAN' , 'DMMAN@GMAIL.COM' , '998853322')
    ; 
    
    
 

		CREATE TABLE ADDRESSES(
		USER_ID INT NOT NULL,
		CITY VARCHAR(20) NOT NULL,
		STATE VARCHAR(20) NOT NULL,
		COUNTRY VARCHAR(20) NOT NULL,
		PIN_CODE VARCHAR(6) NOT NULL,
		CREATED_AT TIMESTAMP DEFAULT NOW(),
		UPDATED_AT TIMESTAMP DEFAULT NOW() ON UPDATE NOW(),
		FOREIGN KEY(USER_ID) REFERENCES USERS(ID)
		);
        
        INSERT INTO ADDRESSES(USER_ID , CITY , STATE , COUNTRY , PIN_CODE) 
        VALUES(1 , 'DEOBAND' , 'UP' , 'INDIA' , '247554') ,
        (2,'MUZZAFARNAGAR' , 'UP' , 'INDIA' , '247570'),
        (3,'BEHAT' , 'UP' , 'INDIA' , '247320'),
        (4,'JANSATH' , 'UP' , 'INDIA' , '247440'),
        (5,'MIRAPUR' , 'UP' , 'INDIA' , '237570'),
        (6,'BIJNOR' , 'UP' , 'INDIA' , '247550')
        ;
        
        

		CREATE TABLE PAYMENT_DETAILS(
		USER_ID INT NOT NULL,
		PAYMENT_ID INT PRIMARY KEY NOT NULL,
		PAYMENT_DATE DATE NOT NULL,
		PAYMENT_TYPE VARCHAR(10) NOT NULL,
		CREATED_AT TIMESTAMP DEFAULT NOW(),
		UPDATED_AT TIMESTAMP DEFAULT NOW() ON UPDATE NOW(),
		FOREIGN KEY(USER_ID) REFERENCES USERS(ID)
		);
        
        INSERT INTO PAYMENT_DETAILS(USER_ID , PAYMENT_ID , PAYMENT_DATE , PAYMENT_TYPE) 
        VALUES(1 , 1 , '2022-01-13' , 'CASH'),
        (1 , 2 , '2022-01-14' , 'ONLINE'),
        (2 , 3, '2022-01-11', 'CASH'),
        (3 , 4 , '2022-01-12', 'ONLINE'),
        (4 , 5 , '2022-01-11' , 'ONLINE'), 
        (5 , 6 , '2022-01-12','CASH');

		CREATE TABLE CART_DETAILS(
		CART_ID INT PRIMARY KEY NOT NULL,
		USER_ID INT NOT NULL,
		TOTAL_AMOUNT FLOAT NOT NULL,
		CREATED_AT TIMESTAMP DEFAULT NOW(),
		UPDATED_AT TIMESTAMP DEFAULT NOW() ON UPDATE NOW(),
		FOREIGN KEY(USER_ID) REFERENCES USERS(ID)
		);
        ALTER TABLE CART_DETAILS ADD COLUMN DISCOUNT FLOAT ;
        ALTER TABLE CART_DETAILS ADD COLUMN FINAL_AMOUNT FLOAT ;  
        
        UPDATE CART_DETAILS 
        SET DISCOUNT = 0.05*TOTAL_AMOUNT
        WHERE CART_ID <> 0;
        
        UPDATE CART_DETAILS 
        SET FINAL_AMOUNT = IF(TOTAL_AMOUNT - DISCOUNT < 0 ,'0' , TOTAL_AMOUNT-DISCOUNT)
        WHERE CART_ID <> 0;
        
        INSERT INTO CART_DETAILS (CART_ID , USER_ID , TOTAL_AMOUNT)
        VALUES(1 , 1 , 1000), 
        (2, 1 , 2000), 
        (3 , 2 , 5000),
        (4 , 3, 10000);
        
        
	
CREATE TABLE CART_ITEMS(
QUANTITY INT NOT NULL,
CART_ID INT NOT NULL,
PRODUCT_ID INT NOT NULL,
PRICE FLOAT NOT NULL,
CREATED_AT TIMESTAMP DEFAULT NOW(),
UPDATED_AT TIMESTAMP DEFAULT NOW() ON UPDATE NOW(),
FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID),
FOREIGN KEY(CART_ID) REFERENCES CART_DETAILS(CART_ID)
);

INSERT INTO CART_ITEMS(QUANTITY , CART_ID , PRODUCT_ID , PRICE )
VALUES( 10 , 1 , 2 , 1000) ,
(4 , 1 , 5 , 2000), 
(10 , 3 , 5 , 5000), 
(1 , 4, 1 , 10000);



SELECT PHONE FROM USERS LEFT JOIN CART_DETAILS ON USERS.ID = CART_DETAILS.USER_ID WHERE CART_ID IS NULL;

SELECT USER_ID , SUM(TOTAL_AMOUNT) FROM CART_DETAILS GROUP BY USER_ID ORDER BY SUM(TOTAL_AMOUNT) DESC LIMIT 5 ; 
 
SELECT CART_ID, TOTAL_AMOUNT AS ORDERS FROM CART ORDER BY TOTAL_AMOUNT DESC LIMIT 5;

SELECT PRODUCT_ID FROM CART_ITEM GROUP BY PRODUCT_ID ORDER BY SUM(QUANTITY) DESC LIMIT 5 ; 

SELECT DISTINCT CITY , COUNT(CITY) FROM ADDRESSES GROUP BY CITY; 

SELECT COUNT(CART_ID) FROM CART_DETAILS WHERE UPDATED_AT <= '2022-01-14 14:10:18';

SELECT CARD_ID FROM CART_DETAILS WHERE TOTAL_AMOUNT > (SELECT AVG(TOTAL_AMOUNT) FROM CART) ; 

SELECT IF(TOTAL_AMOUNT - 2000 < 0 ,'0' , TOTAL_AMOUNT-2000) AS TOTAL_AMOUNT FROM CART_DETAILS;

SELECT * FROM CART_DETAILS;

update cart_details set FINAL_AMOUNT = if(total_amount- DISCOUNT < 0, 0.0, total_amount-DISCOUNT)
WHERE CART_ID <> 0;
